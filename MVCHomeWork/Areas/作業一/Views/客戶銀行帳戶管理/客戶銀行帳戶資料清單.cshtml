@model IEnumerable<MVCHomeWork.Areas.作業一.Models.客戶銀行資訊>

@if (Model.Count() > 0)
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(p => p.銀行名稱)
            </th>
            <th>
                @Html.DisplayNameFor(p => p.銀行代碼)
            </th>
            <th>
                @Html.DisplayNameFor(p => p.分行代碼)
            </th>
            <th>
                @Html.DisplayNameFor(p => p.帳戶名稱)
            </th>
            <th>
                @Html.DisplayNameFor(p => p.帳戶號碼)
            </th>
            <th>
                @Html.DisplayNameFor(p => p.客戶資料.客戶名稱)
            </th>
            <th></th>
        </tr>

        @foreach (var p in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(m => p.銀行名稱)
                </td>
                <td>
                    @Html.DisplayFor(m => p.銀行代碼)
                </td>
                <td>
                    @Html.DisplayFor(m => p.分行代碼)
                </td>
                <td>
                    @Html.DisplayFor(m => p.帳戶名稱)
                </td>
                <td>
                    @Html.DisplayFor(m => p.帳戶號碼)
                </td>
                <td>
                    @Html.DisplayFor(m => p.客戶資料.客戶名稱)
                </td>
                <td>
                    <button type="button" class="btn btn-xs btn-info" onclick="loadEditBankInfo('@p.客戶Id', '@p.Id', '@Url.Action("Edit", "客戶銀行帳戶管理")')">編輯</button>
                    <button type="button" class="btn btn-xs btn-warning" onclick="loadEditBankInfo('@p.客戶Id','@p.Id', '@Url.Action("Detail", "客戶銀行帳戶管理")')">檢視</button>
                    <button type="button" class="btn btn-xs btn-danger" onclick="delBankData('@p.Id', '@p.銀行名稱')">刪除</button>
                </td>
            </tr>
        }
    </table>
}
else
{
    <h3 style="color: red;">查無資料</h3>
}